<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ovX/AGB8r98L0nAe4Ekkn2j8SPJy6P/Z
</value>
  </data>
</root>